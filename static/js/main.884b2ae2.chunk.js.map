{"version":3,"sources":["components/DishForm/DishForm.module.scss","components/Button/Button.js","components/Modal/Modal.js","components/DishForm/DishForm.js","App.js","index.js","components/Modal/Modal.module.scss","components/Button/Button.module.scss"],"names":["module","exports","Button","props","className","styles","button","type","onClick","children","Modal","backdrop","onConfirm","modal","header","title","content","message","actions","DishForm","useState","enteredName","setenteredName","enteredPreparationTime","setEnteredPreparationTime","selectedType","setselectedType","enteredNoOfSlices","setEnteredNoOfSlices","enteredDiameter","setEnteredDiameter","selectedSpiciness","setSelectedSpiciness","enteredSlicesofBread","setEnteredSlicesOfBread","setModal","clearForm","event","a","preventDefault","trim","length","match","isNaN","parseFloat","Number","isInteger","parseInt","dishData","name","preparation_time","no_of_slices","diameter","spiciness_scale","slices_of_bread","fetch","method","body","JSON","stringify","headers","response","json","data","console","log","ok","Error","onSubmit","form","form__heading","form__controls","form__control","htmlFor","placeholder","value","onChange","target","hidden","disabled","selected","min","max","form__actions","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.884b2ae2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DishForm_form__h2VKm\",\"form__heading\":\"DishForm_form__heading__2049h\",\"form__controls\":\"DishForm_form__controls__3hKzE\",\"form__control\":\"DishForm_form__control__bjBem\",\"form__actions\":\"DishForm_form__actions__23e4A\"};","import React from \"react\";\nimport styles from \"./Button.module.scss\";\n\nconst Button = (props) => {\n  return (\n    <button\n      className={styles.button}\n      type={props.type || \"button\"}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport styles from \"./Modal.module.scss\";\n\nconst Modal = (props) => {\n  return (\n    <>\n      <div className={styles.backdrop} onClick={props.onConfirm}/>\n      <div className={styles.modal}>\n        <header className={styles.header}>\n          <h2>{props.title}</h2>\n        </header>\n        <div className={styles.content}>\n          <p>{props.message}</p>\n        </div>\n        <footer className={styles.actions}>\n          <Button onClick={props.onConfirm}>Okay</Button>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport Modal from \"../Modal/Modal\";\n// import { TimeDurationInput } from \"react-time-duration-input\";\nimport styles from \"./DishForm.module.scss\";\n\nconst DishForm = () => {\n  const [enteredName, setenteredName] = useState(\"\");\n  const [enteredPreparationTime, setEnteredPreparationTime] = useState(\"\");\n  const [selectedType, setselectedType] = useState(\"\");\n  const [enteredNoOfSlices, setEnteredNoOfSlices] = useState(\"\");\n  const [enteredDiameter, setEnteredDiameter] = useState(\"\");\n  const [selectedSpiciness, setSelectedSpiciness] = useState(\"\");\n  const [enteredSlicesofBread, setEnteredSlicesOfBread] = useState(\"\");\n  const [modal, setModal] = useState(\"\");\n\n  const dishNameChangeHandler = (event) => {\n    setenteredName(event.target.value);\n  };\n  const preparationTimeChangeHandler = (event) => {\n    setEnteredPreparationTime(event.target.value);\n  };\n  const dishTypeChangeHandler = (event) => {\n    setselectedType(event.target.value);\n  };\n  const numberOfSlicesChangeHandler = (event) => {\n    setEnteredNoOfSlices(event.target.value);\n  };\n  const diameterChangeHandler = (event) => {\n    setEnteredDiameter(event.target.value);\n  };\n  const spicinessChangeHandler = (event) => {\n    setSelectedSpiciness(event.target.value);\n  };\n  const slicesOfBreadChangeHandler = (event) => {\n    setEnteredSlicesOfBread(event.target.value);\n  };\n\n  const clearForm = () => {\n    setenteredName(\"\");\n    setEnteredPreparationTime(\"\");\n    setselectedType(\"\");\n    setEnteredNoOfSlices(\"\");\n    setEnteredDiameter(\"\");\n    setSelectedSpiciness(\"\");\n    setEnteredSlicesOfBread(\"\");\n  };\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    if (enteredName.trim().length === 0) {\n      setModal({\n        title: \"Invalid input\",\n        message: \"Please enter a valid dish name (non-empty value).\",\n      });\n      return;\n    }\n    if (!enteredPreparationTime.match(\"[0-9][0-9]:[0-5][0-9]:[0-5][0-9]\")) {\n      setModal({\n        title: \"Invalid input\",\n        message: \"Please enter a valid preparation time (format 00:00:00).\",\n      });\n      return;\n    }\n    if (!selectedType) {\n      setModal({\n        title: \"Invalid input\",\n        message: \"Please select a type of dish.\",\n      });\n      return;\n    }\n\n    if (\n      (selectedType === \"pizza\") &\n      (isNaN(enteredDiameter) || parseFloat(enteredDiameter) < 0)\n    ) {\n      setModal({\n        title: \"Invalid input\",\n        message:\n          \"Please enter a valid diameter (value equal or greater than 0).\",\n      });\n      return;\n    }\n\n    if (\n      (selectedType === \"pizza\") &\n      (!Number.isInteger(parseFloat(enteredNoOfSlices)) ||\n        parseInt(enteredNoOfSlices) < 0)\n    ) {\n      setModal({\n        title: \"Invalid input\",\n        message:\n          \"Please enter a valid  number of slices (integer value equal or greater than 0).\",\n      });\n      return;\n    }\n\n    if ((selectedType === \"soup\") & !selectedSpiciness) {\n      setModal({\n        title: \"Invalid input\",\n        message: \"Please select a spiciness.\",\n      });\n      return;\n    }\n    if (\n      (selectedType === \"sandwich\") &\n      (!Number.isInteger(parseFloat(enteredSlicesofBread)) &\n        (parseFloat(enteredSlicesofBread) < 0))\n    ) {\n      setModal({\n        title: \"Invalid input\",\n        message:\n          \"Please enter a valid slices of bread (value equal or greater than 0)\",\n      });\n      return;\n    }\n\n    let dishData = \"\";\n\n    if (selectedType === \"pizza\") {\n      dishData = {\n        name: enteredName,\n        preparation_time: enteredPreparationTime,\n        type: selectedType,\n        no_of_slices: parseInt(enteredNoOfSlices),\n        diameter: parseFloat(enteredDiameter),\n      };\n    } else if (selectedType === \"soup\") {\n      dishData = {\n        name: enteredName,\n        preparation_time: enteredPreparationTime,\n        type: selectedType,\n        spiciness_scale: parseInt(selectedSpiciness),\n      };\n    } else if (selectedType === \"sandwich\") {\n      dishData = {\n        name: enteredName,\n        preparation_time: enteredPreparationTime,\n        type: selectedType,\n        slices_of_bread: parseInt(enteredSlicesofBread),\n      };\n    }\n    try {\n      const response = await fetch(\n        \"https://frosty-wood-6558.getsandbox.com:443/dishes\",\n        {\n          method: \"POST\",\n          body: JSON.stringify(dishData),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      setModal({\n        title: \"Dish submitted!\",\n        message: \"A request has been sent.\",\n      });\n      clearForm();\n      const data = await response.json();\n      console.log(data);\n      if (!response.ok) {\n        throw new Error(\"something went wrong\");\n      }\n    } catch (error) {\n      setModal({\n        title: \"Error\",\n        message: error.message,\n      });\n    }\n  }\n\n  const closeModal = () => {\n    setModal(null);\n  };\n\n  return (\n    <>\n      {modal && (\n        <Modal\n          title={modal.title}\n          message={modal.message}\n          onConfirm={closeModal}\n        />\n      )}\n      <form onSubmit={submitHandler} className={styles.form}>\n        <h1 className={styles.form__heading}>Dish form</h1>\n        <div className={styles.form__controls}>\n          <div className={styles.form__control}>\n            <label htmlFor=\"dishName\">Dish name</label>\n            <input\n              name=\"dishName\"\n              type=\"text\"\n              placeholder=\"enter a dish name\"\n              value={enteredName}\n              onChange={dishNameChangeHandler}\n            />\n          </div>\n          <div className={styles.form__control}>\n            <label htmlFor=\"preparationTime\">Preparation time</label>\n            <input\n              name=\"preparationTime\"\n              type=\"text\"\n              placeholder=\"00:00:00\"\n              value={enteredPreparationTime}\n              onChange={preparationTimeChangeHandler}\n            />\n          </div>\n          <div className={styles.form__control}>\n            <label htmlFor=\"dishType\">Dish type</label>\n            <select\n              name=\"dishType\"\n              onChange={dishTypeChangeHandler}\n              value={selectedType}\n            >\n              <option hidden disabled selected value=\"\">\n                {\" \"}\n                - select a type -{\" \"}\n              </option>\n              <option value=\"pizza\">Pizza</option>\n              <option value=\"soup\">Soup</option>\n              <option value=\"sandwich\">Sandwich</option>\n            </select>\n          </div>\n          {selectedType === \"pizza\" && (\n            <>\n              <div className={styles.form__control}>\n                <label htmlFor=\"noOfSlices\">Number of slices</label>\n                <input\n                  name=\"noOfSlices\"\n                  type=\"number\"\n                  placeholder=\"0\"\n                  value={enteredNoOfSlices}\n                  onChange={numberOfSlicesChangeHandler}\n                />\n              </div>\n              <div className={styles.form__control}>\n                <label htmlFor=\"diameter\">Diameter</label>\n                <input\n                  name=\"diameter\"\n                  type=\"float\"\n                  placeholder=\"0\"\n                  value={enteredDiameter}\n                  onChange={diameterChangeHandler}\n                />\n              </div>\n            </>\n          )}\n          {selectedType === \"soup\" && (\n            <>\n              <div className={styles.form__control}>\n                <label htmlFor=\"spiciness\">Spiciness scale</label>\n                <input\n                  name=\"spiciness\"\n                  type=\"range\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={selectedSpiciness}\n                  onChange={spicinessChangeHandler}\n                />\n              </div>\n            </>\n          )}\n\n          {selectedType === \"sandwich\" && (\n            <>\n              <div className={styles.form__control}>\n                <label htmlFor=\"slicesOfBread\">Slices of bread</label>\n                <input\n                  name=\"slicesOfBread\"\n                  type=\"number\"\n                  placeholder=\"0\"\n                  value={enteredSlicesofBread}\n                  onChange={slicesOfBreadChangeHandler}\n                />\n              </div>\n            </>\n          )}\n        </div>\n        <div className={styles.form__actions}>\n          <Button type=\"submit\">Submit</Button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default DishForm;\n","import React from \"react\";\nimport DishForm from \"./components/DishForm/DishForm.js\";\nimport Normalize from \"react-normalize\";\n\nfunction App() {\n  return (\n    <>\n      <Normalize />\n      <DishForm />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mf1y\",\"fadeout\":\"Modal_fadeout__B5BAn\",\"modal\":\"Modal_modal__1vwov\",\"fadein\":\"Modal_fadein__24NBJ\",\"header\":\"Modal_header__3jdKb\",\"content\":\"Modal_content__BZbGL\",\"actions\":\"Modal_actions__34qLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Lf63\"};"],"sourceRoot":""}